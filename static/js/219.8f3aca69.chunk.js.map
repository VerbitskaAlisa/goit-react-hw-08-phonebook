{"version":3,"file":"static/js/219.8f3aca69.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/AddContactForm/AddContactForm.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations.js\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { Box, ModalHeader, ModalFooter, ModalCloseButton, ModalBody, FormControl, Input, Button} from \"@chakra-ui/react\";\n\nexport default function AddContactForm ({ onClose }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleInputChange = e => {\n       const {name, value} = e.currentTarget;\n       switch(name) {\n           case 'name':\n               setName(value)\n               break;\n               case 'number':\n                   setNumber(value)\n                   break;    \n            default:\n               throw new Error(`Unexeptable name - ${name}`)\n       }}\n      const handleSubmit = e => {\n           e.preventDefault();\n   \n           if (contacts.find(contact => contact.name === name)) {\n                  return alert(`${name} is is already in contacts.`);\n           } else {\n            dispatch(addContact({name, number}));\n            reset();\n            onClose();\n       }\n       }\n        \n       const reset = () => {\n          setName('');\n          setNumber('');\n       }  \n\n    return (<Box as=\"form\" onSubmit={handleSubmit}>\n    <ModalHeader textAlign=\"center\">Add Contact</ModalHeader>\n      <ModalCloseButton _hover={{backgroundColor: \"pink\", borderRadius: \"50\"}}/>\n      <ModalBody pb={6}>\n        <FormControl>\n          <Input placeholder='First name' focusBorderColor='pink.400'\n           variant=\"flushed\" name=\"name\" required onChange={handleInputChange} value={name}/>\n        </FormControl>\n\n        <FormControl mt={8}>\n          <Input placeholder='Number' focusBorderColor='pink.400'\n           variant=\"flushed\" name=\"number\" value={number} required onChange={handleInputChange}/>\n        </FormControl>\n      </ModalBody>\n\n      <ModalFooter>\n        <Button colorScheme='pink' mr={3} borderRadius=\"50\" type=\"submit\">\n          Add\n        </Button>\n        <Button onClick={onClose} borderRadius=\"50\">Cancel</Button>\n      </ModalFooter>\n      </Box>)\n}","import { Modal, ModalOverlay, ModalContent } from \"@chakra-ui/react\";\nimport AddContactForm from \"components/AddContactForm/AddContactForm\";\nexport default function ModalWindow ({isOpen, onClose}) {\n    \n    return (\n        <>\n        <Modal\n        closeOnOverlayClick={true}\n        isCentered\n        blockScrollOnMount={false}\n        isOpen={isOpen}\n        onClose={onClose}\n        motionPreset='scale'\n      >\n        <ModalOverlay />\n        <ModalContent p=\"8\">\n        <AddContactForm onClose={onClose}/>\n        </ModalContent>\n      </Modal>\n      </>\n    )\n}\n\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations.js';\nimport { Avatar, Box, Text, Button } from '@chakra-ui/react';\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\n\n\n\nconst ContactItem = ({id, name, number}) => {\n    const dispatch = useDispatch();\n\n    const deleteContacts = () => {\n        dispatch(deleteContact(id));\n    }\n\n\n    return (\n                <> \n                <Box display=\"flex\" alignItems=\"center\">\n                <Avatar mr=\"4\" size=\"lg\" name={name} src='https://bit.ly/tioluwani-kolawole' />\n                <Box>\n                <Text fontSize=\"3xl\">{name}</Text>\n                <Text fontSize=\"2xl\">{number}</Text>\n                </Box>\n                </Box>\n                <Button colorScheme='pink' type=\"button\" borderRadius=\"50\" onClick={deleteContacts}><RiDeleteBin6Line /></Button>\n                </>\n            )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\n\nexport default ContactItem;","import ContactItem from \"../ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, GridItem, useColorMode } from \"@chakra-ui/react\";\nimport { selectContacts, selectFilter } from \"redux/contacts/selectors\";\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n  const { colorMode } = useColorMode();\n\n \n  \n  const getFilteredContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n   return (<Grid templateColumns='repeat(3, 1fr)' gap={8}>\n      {contacts.length > 0 && getFilteredContacts().map(({ id, name, number }) => {\n        return (\n          <GridItem key={id} w='100%' display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" bg={colorMode === \"light\" ? \"#FED7E2\" : \"#B83280\"}  p=\"4\" borderRadius=\"50\" >\n            <ContactItem  id={id}\n                          name={name} \n                          number={number}\n                        />\n           </GridItem>\n        )\n      })}\n   </Grid>\n    )\n}\n\nexport default ContactList;\n\n","import { setFilter } from 'redux/contacts/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Text, Input } from '@chakra-ui/react';\n\nconst Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = e => {\n        dispatch(setFilter(e.target.value));\n    }\n    return (\n        <>\n            <Text fontSize=\"2xl\">Find contacts by name</Text>\n            <Input fontSize=\"2xl\" size=\"lg\" htmlSize={38} width='auto' variant='flushed' type=\"text\" value={filter} onChange={changeFilter} mb=\"8\" focusBorderColor='pink.400'/>\n        </>\n    )\n}\n\n\nexport default Filter;","import { Box, Heading, Button, useColorMode, useDisclosure, Container, Spinner } from \"@chakra-ui/react\";\nimport ModalWindow from \"../../components/Modal/Modal\";\nimport ContactList from \"components/ContactsList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectError } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations.js\";\n\nexport default function Contacts () {\n    const { colorMode } = useColorMode();\n    const { isOpen, onClose, onOpen } = useDisclosure();\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectError);\n    \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n       <Box as=\"main\">\n        <Box as=\"section\">\n        <Container maxW=\"container.xl\" p=\"30\">\n            <Box position=\"relative\" mb=\"16\">\n              <Heading as='h3' size='2xl' textAlign=\"center\" color={colorMode === \"light\" ? \"#702459\" : \"#FED7E2\"}>My Contacts</Heading>\n              <Button ml=\"auto\" display=\"block\" position=\"absolute\" top=\"0\" right=\"0\" borderRadius=\"50\" colorScheme=\"pink\" size=\"lg\" variant='outline' onClick={onOpen}>Add contact</Button>\n            </Box>\n            <Filter />\n            {isLoading && !error && <Spinner color=\"pink.600\"/>}\n            {error && <p>{error}</p>}\n            {!isLoading && <ContactList />}\n            <ModalWindow isOpen={isOpen} onClose={onClose}/>\n        </Container>\n        </Box>\n       </Box>\n    )\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","AddContactForm","onClose","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","Error","reset","as","onSubmit","preventDefault","find","contact","alert","addContact","textAlign","_hover","backgroundColor","borderRadius","pb","I","placeholder","focusBorderColor","variant","required","onChange","mt","colorScheme","mr","type","onClick","ModalWindow","isOpen","closeOnOverlayClick","isCentered","blockScrollOnMount","motionPreset","p","id","display","alignItems","size","src","fontSize","deleteContact","filterValue","colorMode","useColorMode","templateColumns","gap","length","normalizedFilter","toLowerCase","includes","getFilteredContacts","map","w","justifyContent","bg","htmlSize","width","setFilter","target","mb","Contacts","useDisclosure","onOpen","isLoading","useEffect","fetchContacts","maxW","position","color","ml","top","right"],"sourceRoot":""}